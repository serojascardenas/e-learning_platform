{"ast":null,"code":"import axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { identity, get } from './core';\nconst LOCAL_HOST_ADDRESS = '127.0.0.1';\n\nconst getServerOrigin = req => req && `${req.protocol}://${req.localhost || req.get('host') || LOCAL_HOST_ADDRESS}`;\n\nconst defaultErrorHandler = (error, _ref) => {\n  let {\n    req,\n    res,\n    ...props\n  } = _ref;\n  const {\n    response: {\n      data: {\n        statusCode\n      } = {}\n    } = {}\n  } = error;\n  let errorString = get(error, 'response.data', get(error, 'response', error)); // errorString could be an HTML error. To avoid spreading a very long string,\n  //    validate first if it's an actual HTML string.\n\n  if (typeof errorString === 'string' && errorString.indexOf('<!DOCTYPE html>') === 0) {\n    errorString = {\n      errorString\n    };\n  }\n\n  return {\n    error: error.toString(),\n    statusCode,\n    props,\n    ...errorString\n  };\n};\n\nconst fetchComponentData = _ref2 => {\n  let {\n    endpoint = '',\n    settings = {},\n    method = 'get',\n    mapper = identity,\n    errorHandler = defaultErrorHandler\n  } = _ref2;\n\n  const makeRequest = async _ref3 => {\n    let {\n      url,\n      requestId,\n      req,\n      res,\n      ...parsedSettings\n    } = _ref3;\n    const request = await axios({\n      url,\n      method,\n      timeout: 10000,\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Request-Id': requestId,\n        ...(req ? req.headers : undefined)\n      },\n      ...parsedSettings\n    });\n    return { ...mapper({ ...request.data,\n        parsedSettings,\n        req,\n        res\n      }, request),\n      state: request.data.state\n    };\n  };\n\n  const fetcherFunction = async function () {\n    let {\n      req,\n      res,\n      ...props\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const requestId = uuidv4();\n    let url;\n\n    try {\n      if (res) res.set('X-Request-Id', requestId);\n      const absUrl = getServerOrigin(req);\n      let parsedEndpoint = endpoint;\n      let parsedSettings = settings;\n\n      if (typeof parsedEndpoint === 'function') {\n        parsedEndpoint = endpoint({\n          req,\n          ...props\n        });\n      }\n\n      if (typeof parsedSettings === 'function') {\n        parsedSettings = settings({\n          req,\n          ...props\n        });\n      } else {\n        parsedSettings = { ...parsedSettings,\n          ...props\n        };\n      }\n\n      url = `${absUrl || ''}/${parsedEndpoint.replace(/^\\//, '')}`;\n      const requestInTransit = makeRequest({\n        url,\n        requestId,\n        req,\n        res,\n        ...parsedSettings\n      });\n      return await requestInTransit;\n    } catch (err) {\n      const processedError = errorHandler(err, {\n        req,\n        res,\n        ...props\n      }); // eslint-disable-next-line no-console\n\n      console.error('Error on request', processedError);\n      return processedError;\n    }\n  };\n\n  return fetcherFunction();\n};\n\nexport { fetchComponentData };","map":{"version":3,"sources":["/home/sorojas/Documentos/master/proyecto_final/e-learning_platform/ui/src/utils/data.js"],"names":["axios","v4","uuidv4","identity","get","LOCAL_HOST_ADDRESS","getServerOrigin","req","protocol","localhost","defaultErrorHandler","error","res","props","response","data","statusCode","errorString","indexOf","toString","fetchComponentData","endpoint","settings","method","mapper","errorHandler","makeRequest","url","requestId","parsedSettings","request","timeout","headers","undefined","state","fetcherFunction","set","absUrl","parsedEndpoint","replace","requestInTransit","err","processedError","console"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n\tidentity, get,\n} from './core';\n\nconst LOCAL_HOST_ADDRESS = '127.0.0.1';\n\nconst getServerOrigin = req => req && `${req.protocol}://${req.localhost || req.get('host') || LOCAL_HOST_ADDRESS}`;\n\nconst defaultErrorHandler = (error, { req, res, ...props }) => {\n\tconst {\n\t\tresponse: {\n\t\t\tdata: {\n\t\t\t\tstatusCode,\n\t\t\t} = {},\n\t\t} = {},\n\t} = error;\n\n\tlet errorString = get(error, 'response.data', get(error, 'response', error));\n\n\t// errorString could be an HTML error. To avoid spreading a very long string,\n\t//    validate first if it's an actual HTML string.\n\tif (typeof errorString === 'string' && errorString.indexOf('<!DOCTYPE html>') === 0) {\n\t\terrorString = { errorString };\n\t}\n\n\treturn {\n\t\terror: error.toString(),\n\t\tstatusCode,\n\t\tprops,\n\t\t...errorString,\n\t};\n};\n\nconst fetchComponentData = ({\n\tendpoint = '',\n\tsettings = {},\n\tmethod = 'get',\n\tmapper = identity,\n\terrorHandler = defaultErrorHandler,\n}) => {\n\tconst makeRequest = async ({\n\t\turl, requestId, req, res, ...parsedSettings\n\t}) => {\n\t\tconst request = await axios({\n\t\t\turl,\n\t\t\tmethod,\n\t\t\ttimeout: 10000,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'X-Request-Id': requestId,\n\t\t\t\t...(req ? req.headers : undefined),\n\t\t\t},\n\t\t\t...parsedSettings,\n\t\t});\n\n\t\treturn {\n\t\t\t...mapper({\n\t\t\t\t...request.data, parsedSettings, req, res,\n\t\t\t}, request),\n\t\t\tstate: request.data.state,\n\t\t};\n\t};\n\n\tconst fetcherFunction = async ({ req, res, ...props } = {}) => {\n\t\tconst requestId = uuidv4();\n\t\tlet url;\n\n\t\ttry {\n\t\t\tif (res) res.set('X-Request-Id', requestId);\n\n\t\t\tconst absUrl = getServerOrigin(req);\n\n\t\t\tlet parsedEndpoint = endpoint;\n\t\t\tlet parsedSettings = settings;\n\n\t\t\tif (typeof parsedEndpoint === 'function') {\n\t\t\t\tparsedEndpoint = endpoint({ req, ...props });\n\t\t\t}\n\n\t\t\tif (typeof parsedSettings === 'function') {\n\t\t\t\tparsedSettings = settings({ req, ...props });\n\t\t\t} else {\n\t\t\t\tparsedSettings = { ...parsedSettings, ...props };\n\t\t\t}\n\n\t\t\turl = `${absUrl || ''}/${parsedEndpoint.replace(/^\\//, '')}`;\n\n\t\t\tconst requestInTransit = makeRequest({\n\t\t\t\turl, requestId, req, res, ...parsedSettings,\n\t\t\t});\n\n\t\t\treturn await requestInTransit;\n\t\t} catch (err) {\n\t\t\tconst processedError = errorHandler(err, { req, res, ...props });\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('Error on request', processedError);\n\t\t\treturn processedError;\n\t\t}\n\t};\n\n\treturn fetcherFunction();\n};\n\nexport {\n\tfetchComponentData,\n};"]},"metadata":{},"sourceType":"module"}